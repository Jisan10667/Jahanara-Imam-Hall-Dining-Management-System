{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { GlobalConstants } from '../shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/user.service\";\nimport * as i3 from \"../services/snackbar.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"ngx-ui-loader\";\nfunction ForgotPasswordComponent_mat_error_11_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u098F\\u0987 \\u0995\\u09CD\\u09B7\\u09C7\\u09A4\\u09CD\\u09B0\\u099F\\u09BF \\u09AC\\u09BE\\u09A7\\u09CD\\u09AF\\u09A4\\u09BE\\u09AE\\u09C2\\u09B2\\u0995\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordComponent_mat_error_11_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" \\u098F\\u0987 \\u0995\\u09CD\\u09B7\\u09C7\\u09A4\\u09CD\\u09B0\\u099F\\u09BF \\u09B8\\u09A0\\u09BF\\u0995 \\u09A8\\u09DF\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ForgotPasswordComponent_mat_error_11_span_1_Template, 2, 0, \"span\", 8);\n    i0.ɵɵtemplate(2, ForgotPasswordComponent_mat_error_11_span_2_Template, 2, 0, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.forgotPasswordForm.controls.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.forgotPasswordForm.controls.email.erros.pattern);\n  }\n}\nexport let ForgotPasswordComponent = /*#__PURE__*/(() => {\n  class ForgotPasswordComponent {\n    constructor(fb,\n    // private router: Router,\n    userService, snackBar, dialogRef, ngxService) {\n      this.fb = fb;\n      this.userService = userService;\n      this.snackBar = snackBar;\n      this.dialogRef = dialogRef;\n      this.ngxService = ngxService;\n      this.forgotPasswordForm = FormGroup;\n    }\n    ngOnInit() {\n      this.forgotPasswordForm = this.fb.group({\n        email: [null, [Validators.required, Validators.pattern(GlobalConstants.emailRegex)]]\n      });\n    }\n    handleSubmit() {\n      this.ngxService.start();\n      let formData = this.forgotPasswordForm.value;\n      let data = {\n        email: formData.email\n      };\n      this.userService.forgotPassword(data).subscribe(resp => {\n        this.ngxService.stop();\n        this.responseMessage = resp?.message;\n        this.dialogRef.close();\n        this.snackBar.openSnackBar(this.responseMessage, '');\n      }, error => {\n        this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n    static #_ = this.ɵfac = function ForgotPasswordComponent_Factory(t) {\n      return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.SnackbarService), i0.ɵɵdirectiveInject(i4.MatDialogRef), i0.ɵɵdirectiveInject(i5.NgxUiLoaderService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ForgotPasswordComponent,\n      selectors: [[\"app-forgot-password\"]],\n      decls: 17,\n      vars: 3,\n      consts: [[\"color\", \"primary\"], [\"fxLayout\", \"row\"], [1, \"title-center\"], [1, \"mat-typography\"], [3, \"formGroup\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\"], [\"appearance\", \"fill\", \"fxFlex\", \"\"], [\"type\", \"email\", \"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [4, \"ngIf\"], [\"align\", \"center\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"mat-dialog-close\", \"\"]],\n      template: function ForgotPasswordComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\", 1)(2, \"span\", 2);\n          i0.ɵɵtext(3, \"\\u09AA\\u09BE\\u09B8\\u0993\\u09AF\\u09BC\\u09BE\\u09B0\\u09CD\\u09A1 \\u09AD\\u09C1\\u09B2\\u09C7 \\u0997\\u09C7\\u099B\\u09C7\\u09A8?\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(4, \"mat-dialog-content\", 3)(5, \"form\", 4)(6, \"div\", 5)(7, \"mat-form-field\", 6)(8, \"mat-label\");\n          i0.ɵɵtext(9, \" \\u0987\\u09AE\\u09C7\\u0987\\u09B2\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 7);\n          i0.ɵɵtemplate(11, ForgotPasswordComponent_mat_error_11_Template, 3, 2, \"mat-error\", 8);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(12, \"mat-dialog-actions\", 9)(13, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function ForgotPasswordComponent_Template_button_click_13_listener() {\n            return ctx.handleSubmit();\n          });\n          i0.ɵɵtext(14, \" \\u09AA\\u09BE\\u09B8\\u0993\\u09AF\\u09BC\\u09BE\\u09B0\\u09CD\\u09A1 \\u09AA\\u09BE\\u09A0\\u09BE\\u09A8 \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"button\", 11);\n          i0.ɵɵtext(16, \"Close\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.forgotPasswordForm);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.forgotPasswordForm.controls.email.touched && ctx.forgotPasswordForm.controls.email.invalid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !(ctx.forgotPasswordForm.valid && ctx.forgotPasswordForm.dirty));\n        }\n      }\n    });\n  }\n  return ForgotPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}